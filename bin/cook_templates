#!perl -s
use v5.24;
use vars qw($v $dry $U);
use feature qw(signatures);
no warnings qw(experimental::signatures);
use open qw(:std :utf8);

use Data::Dumper;
use File::Basename qw(dirname);
use File::Path qw(make_path);
use FindBin;
use XML::Entities;

=encoding utf8

=head1 NAME

cook_templates - fill in the details for the chocolatey files

=head1 SYNOPSIS

	% perl5.24 cook_templates

	# extra debugging stuff
	% perl5.24 cook_templates -v

=head1 DESCRIPTION

Fetch the latest Rakudo Star release for Perl 6, extract various details,
and fill in the chocolatey files.

=back

=head1 SOURCE AVAILABILITY

This module is in Github:

	https://github.com/briandfoy/rakudo-star-chocolatey

=head1 AUTHOR

brian d foy, C<< <bdfoy@cpan.org> >>

=head1 COPYRIGHT AND LICENSE

Copyright Â© 2017-2020, brian d foy C<< <bdfoy@cpan.org> >>. All rights reserved.

This program is free software; you can redistribute it and/or modify
it under the Artistic License 2. A LICENSE file should have accompanied
this distribution.

=cut

require "$FindBin::Bin/latest_rakudo_msi_details";
require "$FindBin::Bin/get_readme";

$ENV{LATEST_RAKUDO_MSI_UNLINK} = 0 if $U;
my $last_rakudo_details = latest_rakudo_msi_details::get_details();
say Dumper($last_rakudo_details) if $v;

my $readme_details = get_readme::get_readme_stuff();
say Dumper($readme_details) if $v;

$readme_details->{markdown_xml_escaped} = XML::Entities::numify( 'all', $readme_details->{markdown} );

my @templates = glob( 'templates/*.template templates/*/*.template' );

my $cooked_dir = 'cooked_templates';
make_path $cooked_dir;

foreach my $template ( @templates ) {
	say "Cooking template $template";
	my $data = do { local( @ARGV, $/ ) = $template; <> };
	my $file = "cooked_$template";
	$file =~ s/\.template$//;

	my $dirname = dirname $file;
	make_path $dirname;

	open my $fh, '>:utf8', $file
		or die "Could not open <cooked_$template>: $!";

	$data =~ s/%%SHA256%%/$last_rakudo_details->{sha256}/g;
	$data =~ s/%%VERSION%%/$last_rakudo_details->{version}/g;
	$data =~ s/%%URL%%/$last_rakudo_details->{url}/g;
	$data =~ s/%%README%%/$readme_details->{markdown_xml_escaped}/g;

	print {$fh} $data;
	close $fh;
	}

__END__
